{"ast":null,"code":"var _jsxFileName = \"/Users/chehronasmacbookair/Library/CloudStorage/OneDrive-McGillUniversity/Full Stack/closet-app-react/src/components/Calendar.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./css/Calendar.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCaretLeft, faCaretRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Calendar() {\n  _s();\n  const dateToday = new Date();\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const weekdays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n  const currentMonth = dateToday.getMonth();\n  const currentYear = dateToday.getFullYear();\n  const firstMonthDate = new Date(dateToday.getFullYear(), dateToday.getMonth(), 1);\n  const lastMonthDate = new Date(dateToday.getFullYear(), dateToday.getMonth() + 1, 0).getDate();\n  const firstDayIndex = firstMonthDate.getDay();\n  const lastDayIndex = new Date(dateToday.getFullYear(), dateToday.getMonth() + 1, 0).getDay();\n  const prevLastMonthDate = new Date(dateToday.getFullYear(), dateToday.getMonth(), 0).getDate();\n  const [prevMonthDays, setPrevMonthDays] = React.useState([]);\n  const [currentMonthDays, setCurrentMonthDays] = React.useState([]);\n  const [nextMonthDays, setNextMonthDays] = React.useState([]);\n  function generatesCalendar() {\n    let prevDaysList = [];\n    for (let j = firstDayIndex; j > 0; j--) {\n      prevDaysList.push(prevLastMonthDate - j + 1);\n    }\n    setPrevMonthDays(prevDaysList);\n    let currentDaysList = [];\n    for (let i = 1; i <= lastMonthDate; i++) {\n      if (i === new Date().getDate() && dateToday.getMonth() === new Date().getMonth() && dateToday.getFullYear() === new Date().getFullYear()) {\n        currentDaysList.push([i]);\n        console.log(\"today\");\n      } else {\n        currentDaysList.push(i);\n      }\n    }\n    setCurrentMonthDays(currentDaysList);\n    let nextDaysList = [];\n    for (let k = 1; k <= 7 - lastDayIndex - 1; k++) {\n      nextDaysList.push(k);\n      // days += '<div class=\"next-date\">' + k + '</div>';\n      // $(\".days\").html(days);\n    }\n\n    setNextMonthDays(nextDaysList);\n    //     let createdLookBulk = null;\n    //     get(ref(db, \"createdLooks/\")).then(function(snap) {\n    //         createdLookBulk = snap.val();\n    //     });\n\n    //     get(ref(db, \"scheduledLooks/\")).then(function(snapshot) {\n    //         let lookDate = null;\n    //         for (let time in snapshot.val()) {\n    //             let lookIDFromDb = snapshot.val()[time].dBLookID;\n    //             lookDate = new Date(parseInt(time));\n    //             let lookView = look(lookIDFromDb, createdLookBulk[lookIDFromDb].lookToSave);\n\n    //             let currentMonthName = $(\"#currentMonth\").text();\n    //             let currentYearValue = $(\"#currentYear\").text();\n\n    //             if (months.indexOf(currentMonthName) === lookDate.getMonth()\n    //                 && currentYearValue == lookDate.getFullYear()) {\n    //                     // console.log($(\".this-month[data='\" + lookDate.getDate() + \"']\"));\n    //                     $(\".this-month[data='\" + lookDate.getDate() + \"']\").append(lookView);\n    //                 };\n    //         }\n    //         // console.log($(\".days\"));\n    //     });\n    // }\n  }\n\n  function showNextMonth() {\n    dateToday.setMonth(dateToday.getMonth() - 1);\n    generatesCalendar();\n  }\n  ;\n  function showPrevMonth() {\n    dateToday.setMonth(dateToday.getMonth() + 1);\n    generatesCalendar();\n    console.log(\"Prev\");\n  }\n  console.log(currentMonthDays);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page--container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-header-box\",\n      children: \"Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-body-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"month-header-box\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCaretLeft,\n          className: \"nav--arrow\",\n          onClick: showPrevMonth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-month-year\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"current-month\",\n            children: months[currentMonth]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"current-year\",\n            children: currentYear\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCaretRight,\n          className: \"nav--arrow\",\n          onClick: showNextMonth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weekday--box\",\n        children: weekdays.map((weekday, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: weekday\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 55\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date--box\",\n        children: [prevMonthDays.map((date, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prev-month-date\",\n          children: date\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 57\n        }, this)), currentMonthDays.map((date, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: Array.isArray(date) ? \"today current-month-date\" : \"current-month-date\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dates\",\n            children: Array.isArray(date) ? date[0] : date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)), nextMonthDays.map((date, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"next-month-date\",\n          children: date\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 57\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n}\n_s(Calendar, \"Qx2uL6f0SHhd5e31OWDvAYkkW0o=\");\n_c = Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","FontAwesomeIcon","faCaretLeft","faCaretRight","Calendar","dateToday","Date","months","weekdays","currentMonth","getMonth","currentYear","getFullYear","firstMonthDate","lastMonthDate","getDate","firstDayIndex","getDay","lastDayIndex","prevLastMonthDate","prevMonthDays","setPrevMonthDays","useState","currentMonthDays","setCurrentMonthDays","nextMonthDays","setNextMonthDays","generatesCalendar","prevDaysList","j","push","currentDaysList","i","console","log","nextDaysList","k","showNextMonth","setMonth","showPrevMonth","map","weekday","index","date","Array","isArray"],"sources":["/Users/chehronasmacbookair/Library/CloudStorage/OneDrive-McGillUniversity/Full Stack/closet-app-react/src/components/Calendar.js"],"sourcesContent":["import React from \"react\"\nimport \"./css/Calendar.css\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faCaretLeft, faCaretRight } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function Calendar() {\n    const dateToday = new Date();\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n                        \"July\", \"August\", \"September\", \"October\", \"November\",\n                        \"December\"];\n    const weekdays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\n\n    const currentMonth = dateToday.getMonth();\n    const currentYear = dateToday.getFullYear();\n\n    const firstMonthDate = new Date(dateToday.getFullYear(), dateToday.getMonth(), 1);\n    const lastMonthDate = new Date(dateToday.getFullYear(),dateToday.getMonth() + 1, 0).getDate();\n    const firstDayIndex = firstMonthDate.getDay();\n    const lastDayIndex = new Date(dateToday.getFullYear(),dateToday.getMonth() + 1, 0).getDay();\n    \n    const prevLastMonthDate = new Date(dateToday.getFullYear(),dateToday.getMonth(), 0).getDate();\n\n    const [prevMonthDays, setPrevMonthDays] = React.useState([]);\n    const [currentMonthDays, setCurrentMonthDays] = React.useState([]);\n    const [nextMonthDays, setNextMonthDays] = React.useState([]);\n\n    function generatesCalendar() {\n\n        let prevDaysList = [];\n        for (let j = firstDayIndex; j > 0; j--) {\n            prevDaysList.push(prevLastMonthDate - j + 1);\n        }\n\n        setPrevMonthDays(prevDaysList);\n\n        let currentDaysList = [];\n        for (let i = 1; i <= lastMonthDate; i++) {\n            if (i === new Date().getDate() && dateToday.getMonth() === new Date().getMonth() && \n            dateToday.getFullYear() === new Date().getFullYear()) {\n                currentDaysList.push([i])\n                console.log(\"today\")\n            } else {\n                currentDaysList.push(i)\n            }\n        }\n\n        setCurrentMonthDays(currentDaysList)\n\n        let nextDaysList = [];\n        for (let k = 1; k <= (7 - lastDayIndex - 1); k++) {\n            nextDaysList.push(k);\n            // days += '<div class=\"next-date\">' + k + '</div>';\n            // $(\".days\").html(days);\n        }\n\n        setNextMonthDays(nextDaysList)\n    //     let createdLookBulk = null;\n    //     get(ref(db, \"createdLooks/\")).then(function(snap) {\n    //         createdLookBulk = snap.val();\n    //     });\n\n\n    //     get(ref(db, \"scheduledLooks/\")).then(function(snapshot) {\n    //         let lookDate = null;\n    //         for (let time in snapshot.val()) {\n    //             let lookIDFromDb = snapshot.val()[time].dBLookID;\n    //             lookDate = new Date(parseInt(time));\n    //             let lookView = look(lookIDFromDb, createdLookBulk[lookIDFromDb].lookToSave);\n    \n    //             let currentMonthName = $(\"#currentMonth\").text();\n    //             let currentYearValue = $(\"#currentYear\").text();\n        \n    //             if (months.indexOf(currentMonthName) === lookDate.getMonth()\n    //                 && currentYearValue == lookDate.getFullYear()) {\n    //                     // console.log($(\".this-month[data='\" + lookDate.getDate() + \"']\"));\n    //                     $(\".this-month[data='\" + lookDate.getDate() + \"']\").append(lookView);\n    //                 };\n    //         }\n    //         // console.log($(\".days\"));\n    //     });\n    // }\n    }\n\n    function showNextMonth() {\n        dateToday.setMonth(dateToday.getMonth() - 1);\n        generatesCalendar();\n    };\n\n    function showPrevMonth() {\n        dateToday.setMonth(dateToday.getMonth() + 1);\n        generatesCalendar();\n        console.log(\"Prev\")\n    }\n\n    console.log(currentMonthDays)\n    return (\n        <div className=\"page--container\">\n            <div className=\"calendar-header-box\">Calendar</div>\n            <div className=\"calendar-body-box\">\n                <div className=\"month-header-box\">\n                    <FontAwesomeIcon icon={faCaretLeft} className=\"nav--arrow\" onClick={showPrevMonth}/>\n                    <div className=\"current-month-year\" >\n                        <div className=\"current-month\">{months[currentMonth]}</div>\n                        <div className=\"current-year\">{currentYear}</div>\n                    </div>\n                    <FontAwesomeIcon icon={faCaretRight} className=\"nav--arrow\" onClick={showNextMonth}/>\n                </div>\n                <div className=\"weekday--box\">\n                    {weekdays.map((weekday, index) => <div key={index}>{weekday}</div>)}\n                </div>\n                <div className=\"date--box\">\n                    {prevMonthDays.map((date, index) => <div className=\"prev-month-date\" key={index}>{date}</div>)}\n                    {currentMonthDays.map((date, index) => \n                    <div className={Array.isArray(date) ? \"today current-month-date\" : \"current-month-date\"} key={index}>\n                        <div className=\"dates\">{Array.isArray(date) ? date[0] : date}</div>\n                    </div>)}\n                    {nextMonthDays.map((date, index) => <div className=\"next-month-date\" key={index}>{date}</div>)}\n                </div>\n            </div>\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}